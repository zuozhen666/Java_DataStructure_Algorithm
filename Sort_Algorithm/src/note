1）内部排序：加载到内部存储器中排序
    插入排序：
        直接插入（多）：
        希尔排序：
    选择排序：
        简单选择（多）：
        堆排序：
    交换排序：
        冒泡（多）：
        快速：
    归并排序：
    基数排序：
2）外部排序：数据量过大，无法全部加载到内存中，需要借助外部存储进行排序

从排序开始考虑算法时间复杂度；

时间频度：
    一个算法花费的时间与算法中语句执行次数成正比
    T(n):一个算法中的语句执行次数称为语句频度或时间频度
    T(n) = O(f(n))
    1 < log2(n) < n < nlog2(n) < n^2 < n^3 < n^k < 2^n（常见）
    尽可能避免指数阶的算法！

空间复杂度：
    一个算法在运行过程中临时占用存储空间大小的量度

排序算法总结：

    （1）相关术语解释：
    1）稳定：如果a原本在b的前面，a=b，排序之后a仍然在b的前面
    2）不稳定：反上
    3）内排序：所有排序操作都在内存中完成
    4）外排序：由于数据太大，因此把数据放在磁盘中，而排序通过磁盘和内存的数据传输才能进行
    5）时间复杂度：一个算法执行所耗费的时间
    6）空间复杂度：运行完一个程序所需内存的大小
    7）n：数据规模
    8）k：“桶”的个数
    9）In-place：不占用额外内存
    10）Out-place：占用额外内存
    （2）算法对比：
    排序算法    平均时间复杂度 最好情况     最坏情况        空间复杂度   排序方式    稳定性
    冒泡          O(n^2)        O(n)         O(n^2)           O(1)       In-place     Y
    选择          O(n^2)        O(n^2)       O(n^2)           O(1)       In-place     N
    插入          O(n^2)        O(n)         O(n^2)           O(1)       In-place     Y
    希尔          O(nlgn)       O(n(logn)^2) O(n(logn)^2)     O(1)       In-place     N
    归并          O(nlgn)       O(nlgn)      O(nlgn)          O(n)       Out-place    Y
    快速          O(nlgn)       O(nlgn)      O(n^2)           O(lgn)     In-place     N
    堆            O(nlgn)       O(nlgn)      O(nlgn)          O(1)       In-place     N
    计数          O(n+k)        O(n+k)       O(n+k)           O(k)       Out-place    Y
    桶            O(n+k)        O(n+k)       O(n^2)           O(n+k)     Out-place    Y
    基数          O(n*k)        O(n*k)       O(n*k)           O(n+k)     Out-place    Y